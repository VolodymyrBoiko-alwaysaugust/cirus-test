/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useLoader, useFrame, } from '@react-three/fiber';
import { TextureLoader, MathUtils } from 'three';



export function OrbOld({texture ,...props}) {
  const { nodes, materials } = useGLTF('/orb.gltf')

  const [daymapT, nightmapT, moonT, iconBTC, orb_albedo, orb_emissive, orb_normal, orb_roughness] = useLoader(TextureLoader, [
    '8k_earth_daymap.jpeg',
    '8k_earth_nightmap.jpeg',
    '8k_moon.jpeg',
    'BTC-icon.png',
    'orb/orb_albedo.png',
    'orb/orb_emissive.png',
    'orb/orb_normal.png',
    'orb/orb_roughness.png',
  ]);

  useLayoutEffect(() => {
    materials[""].color.set('#ff315e')
    // materials[''].metalness = 0.5
    // materials[''].roughness = 0.5
    // materials[''].lightMapIntensity = 0.2
    materials[''].map = orb_albedo;
    materials[''].roughnessMap = orb_roughness;
    materials[''].normalMap = orb_normal;
    materials[''].emissiveMap = orb_emissive;
    console.log("materials ", materials);
    console.log("nodes ", nodes);
  }, [materials])

  return (
    <group {...props} dispose={null} scale={0.12}>
      <mesh geometry={nodes.logo_v4.geometry} material={nodes.logo_v4.material}>
      </mesh>
    </group>
  )
}

useGLTF.preload('/orb.gltf')
